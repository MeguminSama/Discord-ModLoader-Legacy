import { app, BrowserWindow } from 'electron';
import { parseArgs } from "util";
import { modHook } from "./main.ipc";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

const args = parseArgs({
  args: process.argv.slice(1),
  options: {
    profile: {
      type: "string",
    },
    "discord-path": {
      type: "string",
    }
  }
});

async function main() {

  if (args.values.profile && args.values["discord-path"]) {
    await modHook.startProfile(args.values.profile, args.values["discord-path"], false);
    process.exit(0);
  }

  if (require('electron-squirrel-startup')) {
    app.quit();
  }

  const createWindow = (): void => {
    const mainWindow = new BrowserWindow({
      minHeight: 720,
      minWidth: 1280,
      webPreferences: {
        preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
        nodeIntegration: false,
      },
      autoHideMenuBar: true,
      title: "Discord ModLoader",
      icon: "src/favicon.ico"
    });

    mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);
  };

  app.on('ready', createWindow);

  app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') {
      app.quit();
    }
  });

  app.on('activate', () => {
    if (BrowserWindow.getAllWindows().length === 0) {
      createWindow();
    }
  });

}

main();